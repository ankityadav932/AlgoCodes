//{ Driver Code Starts
#include <vector>
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends

class Solution{
    public:   
    vector<pair<int,int>> allPairs(int A[], int B[], int N, int M, int X)
    {
        Solution ob;
        vector<pair<int,int>> pairs;
        sort(A, A + N);
        sort(B, B + M);

        

        // for (int i = 0; i < N; ++i)
        // {   
        //     int key = X - A[i];
        //     int match = ob.binarySearch(B, M, key);
            
        //     if (match >= 0)
        //     {
        //         pairs.push_back(make_pair(A[i], B[match]));
        //         A[i] = 0;
        //         B[match] = 0;
        //     }

        //     if (i == 1) break;
        // }

        return pairs;
    }

    int binarySearch(int arr[], int n, int k)
    {
        // 3,4,5,6,8
        int i,j,mid; 
        i = 0;
        j = n-1;
        
        if (arr[i] == k) return i;
        if (arr[j] == k) return j;

        while(i < j)
        {
            mid = (i+j)/2;
            
            if (arr[mid] < k)
            {
                i = mid;   
            }
            else if(arr[mid] > k)
            {     
                j = mid;
            }
            else break;
        }

        return (arr[mid] == k) ? mid : -1;
    }
};


//{ Driver Code Starts.
int main() 
{
    int N, M, X;
    cin >> N >> M >> X;
    int A[N], B[M];
    
    for(int i = 0;i<N;i++)
        cin >> A[i];
    for(int i = 0;i<M;i++)
        cin >> B[i];
        
   Solution ob;
   vector<pair<int,int>> vp = ob.allPairs(A, B, N, M, X);
   int sz = vp.size();
    if(sz==0)
    cout<<-1<<endl;
    else{
        for(int i=0;i<sz;i++){
            if(i==0)
            cout<<vp[i].first<<" "<<vp[i].second;
            else
            cout<<", "<<vp[i].first<<" "<<vp[i].second;
        }
        cout<<endl;
    }
    return 0;
}
// } Driver Code Ends
