#include <iostream>
#include <string>
#include <vector>

using namespace std;

vector<int> strToArr(string);

void solve(string pd, int n)
{
    int i = 0;
    int j = pd.length()-1;

    if (pd.length() < 2 && n > 0)
    {
        cout << '9' << endl;
        return;
    }
    
    vector<int> ind;
    while(i < j && n > 0)
    {
        if(pd[i] > pd[j])
        {
            pd[j] = pd[i];
            ind.push_back(j);
            n--;
        }
        else if(pd[j] > pd[i])
        {
            pd[i] = pd[j];
            ind.push_back(i);
            n--;
        }

        i++;
        j--;
    }

    i = 0;
    j = pd.length()-1;
    while(i < j && n > 0)
    {
        bool indi = false;
        for(int k : ind)
        {
            if((i == k && pd[i] < '9') || (j == k && pd[j] < '9'))
            { 
                pd[i] = '9';
                pd[j] = '9';
                n--;  
                indi = true;
            }
        }

        if(n > 1 && pd[i] < '9' && !indi)
        {
            pd[i] = '9';
            pd[j] = '9';
            n -= 2;
        }
        i++;
        j--;
    }
    
    if (n > 0 && (pd.length() % 2 == 1))
    {
        pd[pd.length() / 2] = '9';
    }

    i = 0;
    j = pd.length()-1;
    while(i < j)
    {
        if(pd[i] != pd[j])
        {
            cout << -1 << endl;
            return;
        }
        i++;
        j--;
    }

    for(char i : pd)
        cout << i;
}

int main()
{
    string inp1;
    string inpStr;
    int n = 0;
    getline(cin >> ws, inp1);
    getline(cin >> ws, inpStr);
    vector<int> intArr = strToArr(inp1);
    n = intArr[1];
    solve(inpStr, n);
    return 0;
}

vector<int> strToArr(string str)
{
    string temp;
    vector<int> arr;

    for (int i = 0; i < str.length(); ++i)
    {
        if (str[i] != ' ')
        {
            temp += str[i];
        }
        else
        {
            int x = stoi(temp);
            arr.push_back(x);
            temp = "";
        }
    }

    int x = stoi(temp);
    arr.push_back(x);

    return arr;
}


/*
Sample Input
---
4 1u
3943
---
6 3
092282
---
4 1
0011
---
6 2
932239
*/
